name: Run Linting and Testing

on:
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Check for Linting Errors
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: NPM Install
        run: npm install --only-dev
        shell: bash

      - name: Build GraphQL Code
        run: npm run introspection

      - name: Check for Linting Issues
        run: npm run lint

  client-unit-tests:
    runs-on: ubuntu-latest
    name: Run Client Side Unit Tests
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: NPM Install
        run: npm install --only-dev
        shell: bash

      - name: Build GraphQL Code
        run: npm run introspection

      - name: Run unit tests for the client
        run: npm run test --workspace=client

  server-unit-tests:
    runs-on: ubuntu-latest
    name: Run Server Side Unit Tests
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: NPM Install
        run: npm install --only-dev
        shell: bash

      - name: Build GraphQL Code
        run: npm run introspection


      - name: Run unit tests for the server
        run: npm run test --workspace=server

  e2e-tests:
    runs-on: ubuntu-latest
    name: Run E2E Tests
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: NPM Install
        run: npm install --only-dev
        shell: bash

      - name: Build GraphQL Code
        run: npm run introspection

      - name: Build Code
        run: |
          npm run build:prod
          mkdir -p server/bucket-test/Entries

      - name: Start MongoDB Instance
        uses: supercharge/mongodb-github-action@1.8.0

      - name: Run e2e testing
        uses: cypress-io/github-action@v4.2.0
        with:
          start: npm run start:ci
        env:
          MONGO_URI: mongodb://localhost:27017/signlab-test

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Verify Build Works
        uses: docker/build-push-action@v3
        with:
          push: false
