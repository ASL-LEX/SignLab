name: client
on:
  workflow_dispatch:
  push:
    paths:
      - 'client/**'
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    paths:
      - 'client/**'
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Check for Linting Errors
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: NPM Install
        run: npm install --only-dev
        shell: bash

      - name: Build GraphQL Code
        run: npm run introspection

      - name: Check for Linting Issues
        run: npm run lint

      - name: Check for Prettier Issues
        run: npm run prettier

  unit-tests:
    runs-on: ubunut-latest
    name: Unit Tests
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: NPM Install
        run: npm install --only-dev
        shell: bash

      - name: Build GraphQL Code
        run: npm run introspection

      - name: Run unit tests for the client
        run: npm run test

  build:
    runs-on: ubuntu-latest
    name: Build
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: NPM Install
        run: npm install
        shell: bash

      - name: Build
        run: npm run build

  docker-build:
    runs-on: ubuntu-latest
    name: Docker Build (and Deploy)
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Test Build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: hicsail/signlab-client:unstable
          build-args: |
            PRODUCTION="false"
            GRAPHQL_ENDPOINT=${{ secrets.GRAPHQL_ENDPOINT }}
            ASL_LEX_ID=${{ secrets.ASL_LEX_ID }}

      - name: Build & Push Docker Production Build
        uses: docker/build-push-action@v4
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: hicsail/signlab-client:latest,hicsail/signlab-client:${{github.ref_name}}
          build-args: |
            PRODUCTION="true"
            GRAPHQL_ENDPOINT=${{ secrets.GRAPHQL_ENDPOINT_PRODUCTION }}
            ASL_LEX_ID=${{ secrets.ASL_LEX_ID_PRODUCTION }}

      - name: Push to Staging
        uses: fjogeleit/http-request-action@v1
        if: github.ref == 'refs/heads/main'
        with:
          method: "POST"
          url: ${{ secrets.PORTAINER_WEBHOOK }}
          preventFailureOnNoResponse: true

      - name: Push to Production
        uses: fjogeleit/http-request-action@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          method: "POST"
          url: ${{ secrets.PORTAINER_WEBHOOK_PRODUCTION }}
          preventFailureOnNoResponse: true
